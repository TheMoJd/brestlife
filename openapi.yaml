openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /api/users:
    get:
      tags:
        - user-controller
      operationId: getAllUsers
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
    post:
      tags:
        - user-controller
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/User"
  /api/places:
    get:
      tags:
        - place-controller
      operationId: getAllPlaces
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Place"
    post:
      tags:
        - place-controller
      operationId: createPlace
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Place"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Place"
  /api/users/{id}:
    get:
      tags:
        - user-controller
      operationId: getUserById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/User"
    delete:
      tags:
        - user-controller
      operationId: deleteUserById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
  /api/places/{name}:
    get:
      tags:
        - place-controller
      operationId: getPlaceByName
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Place"
  /api/places/{id}:
    get:
      tags:
        - place-controller
      operationId: getPlaceById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Place"
    delete:
      tags:
        - place-controller
      operationId: deletePlaceById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        email:
          type: string
        password:
          type: string
        role:
          type: string
          enum:
            - STUDENT
            - ADMIN
            - COMPANY
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Place:
      type: object
      properties:
        name:
          type: string

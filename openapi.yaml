openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /api/users:
    get:
      tags:
        - user-controller
      operationId: getAllUsers
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
    post:
      tags:
        - user-controller
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/User"
  /api/places:
    get:
      tags:
        - place-controller
      operationId: getAllPlaces
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Place"
    post:
      tags:
        - place-controller
      operationId: createPlace
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Place"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Place"
  /api/jobs:
    get:
      tags:
        - job-controller
      operationId: getAllJobs
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Job"
    post:
      tags:
        - job-controller
      operationId: createJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Job"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Job"
  /api/events:
    get:
      tags:
        - event-controller
      operationId: getAllEvents
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Event"
    post:
      tags:
        - event-controller
      operationId: createEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Event"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Event"
  /api/deals:
    get:
      tags:
        - deal-controller
      operationId: getAllDeals
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Deal"
    post:
      tags:
        - deal-controller
      operationId: createDeal
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Deal"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Deal"
  /api/users/{id}:
    get:
      tags:
        - user-controller
      operationId: getUserById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/User"
    delete:
      tags:
        - user-controller
      operationId: deleteUserById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
  /api/places/{name}:
    get:
      tags:
        - place-controller
      operationId: getPlaceByName
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Place"
  /api/places/{id}:
    get:
      tags:
        - place-controller
      operationId: getPlaceById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Place"
    delete:
      tags:
        - place-controller
      operationId: deletePlaceById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
  /api/jobs/{id}:
    get:
      tags:
        - job-controller
      operationId: getJobById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Job"
    delete:
      tags:
        - job-controller
      operationId: deleteJobById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
  /api/jobs/{companyName}:
    get:
      tags:
        - job-controller
      operationId: getJobByCompanyName
      parameters:
        - name: companyName
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Job"
  /api/events/{id}:
    get:
      tags:
        - event-controller
      operationId: getEventById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Event"
    delete:
      tags:
        - event-controller
      operationId: deleteEventById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
  /api/events/title/{title}:
    get:
      tags:
        - event-controller
      operationId: getEventByTitle
      parameters:
        - name: title
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Event"
  /api/deals/{title}:
    get:
      tags:
        - deal-controller
      operationId: getDealByTitle
      parameters:
        - name: title
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Deal"
  /api/deals/{id}:
    get:
      tags:
        - deal-controller
      operationId: getDealById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Deal"
    delete:
      tags:
        - deal-controller
      operationId: deleteDealById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        email:
          type: string
        password:
          type: string
        role:
          type: string
          enum:
            - STUDENT
            - ADMIN
            - COMPANY
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        type:
          type: string
          enum:
            - PLACE
            - JOB
            - EVENT
        createdAt:
          type: string
          format: date-time
        createdBy:
          $ref: "#/components/schemas/User"
    Place:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        category:
          $ref: "#/components/schemas/Category"
        address:
          type: string
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        imageUrl:
          type: string
        createdAt:
          type: string
          format: date-time
        createdBy:
          $ref: "#/components/schemas/User"
    Job:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        description:
          type: string
        companyName:
          type: string
        location:
          type: string
        category:
          $ref: "#/components/schemas/Category"
        duration:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        contactEmail:
          type: string
        createdAt:
          type: string
          format: date-time
        createdBy:
          $ref: "#/components/schemas/User"
    Event:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        description:
          type: string
        category:
          $ref: "#/components/schemas/Category"
        date:
          type: string
          format: date-time
        location:
          type: string
        price:
          type: number
          format: double
        createdBy:
          $ref: "#/components/schemas/User"
        imageUrl:
          type: string
        createdAt:
          type: string
          format: date-time
    Deal:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        description:
          type: string
        link:
          type: string
        category:
          $ref: "#/components/schemas/Category"
        createdBy:
          $ref: "#/components/schemas/User"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
